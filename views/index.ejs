<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>지도에 사용자 컨트롤 올리기</title>
    <style>
html, body {width:100%;height:100%;margin:0;padding:0;}
.map_wrap {position:relative;overflow:hidden;width:100%;height:100%;}
.radius_border{border:1px solid #919191;border-radius:5px;}
.custom_typecontrol {position:absolute;top:10px;right:10px;overflow:hidden;width:130px;height:30px;margin:0;padding:0;z-index:1;font-size:12px;font-family:'Malgun Gothic', '맑은 고딕', sans-serif;}
.custom_typecontrol span {display:block;width:65px;height:30px;float:left;text-align:center;line-height:30px;cursor:pointer;}
.custom_typecontrol .btn {background:#fff;background:linear-gradient(#fff,  #e6e6e6);}
.custom_typecontrol .btn:hover {background:#f5f5f5;background:linear-gradient(#f5f5f5,#e3e3e3);}
.custom_typecontrol .btn:active {background:#e6e6e6;background:linear-gradient(#e6e6e6, #fff);}
.custom_typecontrol .selected_btn {color:#fff;background:#425470;background:linear-gradient(#425470, #5b6d8a);}
.custom_typecontrol .selected_btn:hover {color:#fff;}
.custom_zoomcontrol {position:absolute;top:50px;right:10px;width:36px;height:80px;overflow:hidden;z-index:1;background-color:#f5f5f5;}
.custom_zoomcontrol span {display:block;width:36px;height:40px;text-align:center;cursor:pointer;}
.custom_zoomcontrol span img {width:15px;height:15px;padding:12px 0;border:none;}
.custom_zoomcontrol span:first-child{border-bottom:1px solid #bfbfbf;}
</style>
</head>
<body>
<div style="position:fixed;z-index:999;margin-top:15px;margin-left:15px">
  <button onclick="changeMarker('total')">전체</button>
  <button onclick="changeMarker('gameone')">게임원</button>
  <button onclick="changeMarker('catchform')">캐치폼</button>
  <button onclick="changeMarker('etc')">기타</button>
  <button onclick="changeMarker('empty')">없음</button>
</div>
<div class="map_wrap">
    <div id="map" style="width:100%;height:100%;position:relative;overflow:hidden;"></div>
    <!-- 지도타입 컨트롤 div 입니다 -->
    <div class="custom_typecontrol radius_border">
        <span id="btnRoadmap" class="selected_btn" onclick="setMapType('roadmap')">지도</span>
        <span id="btnSkyview" class="btn" onclick="setMapType('skyview')">스카이뷰</span>
    </div>
    <!-- 지도 확대, 축소 컨트롤 div 입니다 -->
    <div class="custom_zoomcontrol radius_border">
        <span onclick="zoomIn()"><img src="http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_plus.png" alt="확대"></span>
        <span onclick="zoomOut()"><img src="http://t1.daumcdn.net/localimg/localimages/07/mapapidoc/ico_minus.png" alt="축소"></span>
    </div>
</div>

<!-- 라이브러리 불러오기 -->
<script type="text/javascript" src="//dapi.kakao.com/v2/maps/sdk.js?appkey=d112b7d1b0c2bd7ecd8cdfe9de54a599&libraries=services,clusterer,drawing"></script>

<script>


var gameoneDatas = []
var catchformDatas = []
var etcDatas = []
var emptyDatas = []

<% for(var i in data){ %>
  var category = "<%= data[i][1] %>"
  var league_name = "<%= data[i][2] %>"
  var game_count = "<%= data[i][3] %>"
  var info = league_name + "(" + game_count + ")"
  var x = "<%= data[i][5] %>"
  var y = "<%= data[i][6] %>"

  <% if(data[i][5] == "x"){continue} %>

  var this_row = [new kakao.maps.LatLng(y,x),info]

  if(category == "게임원 플레이"){
    gameoneDatas.push(this_row)
  }
  else if(category == "캐치폼"){
    catchformDatas.push(this_row)
  }
  else if(category == ""){
    emptyDatas.push(this_row)
  }
  else{
    etcDatas.push(this_row)
  }

<%}%>


var gameoneMarkers = []
var catchformMarkers = []
var etcMarkers = []
var emptyMarkers = []

var mapContainer = document.getElementById('map'), // 지도를 표시할 div
    mapOption = {
        center: new kakao.maps.LatLng(37.550553, 127.073709), // 지도의 중심좌표
        level: 10 // 지도의 확대 레벨
    };

var map = new kakao.maps.Map(mapContainer, mapOption); // 지도를 생성합니다

var geocoder = new kakao.maps.services.Geocoder();

function createGameoneMarker(){

  for(var i=0; i<gameoneDatas.length;i++){
    var imageSrc = '../images/gameone.png';
    var imageSize = new kakao.maps.Size(34,34);
    var imageOption = {offset: new kakao.maps.Point(17,34)}

    var markerImage = new kakao.maps.MarkerImage(imageSrc,imageSize,imageOption)
    // 마커를 생성
    var marker = new kakao.maps.Marker({
        position: gameoneDatas[i][0],
        image : markerImage
    });

    // 마커에 표시할 인포윈도우를 생성합니다
    var infowindow = new kakao.maps.InfoWindow({
        content: gameoneDatas[i][1] // 인포윈도우에 표시할 내용
    });

    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
    // 이벤트 리스너로는 클로저를 만들어 등록합니다
    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));

    gameoneMarkers.push(marker)
  }

}

function createCatchfromMarker(){

  for(var i=0; i<catchformDatas.length;i++){
    var imageSrc = '../images/catchform.png';
    var imageSize = new kakao.maps.Size(34,34);
    var imageOption = {offset: new kakao.maps.Point(17,34)}

    var markerImage = new kakao.maps.MarkerImage(imageSrc,imageSize,imageOption)
    // 마커를 생성
    var marker = new kakao.maps.Marker({
        position: catchformDatas[i][0],
        image : markerImage
    });

    // 마커에 표시할 인포윈도우를 생성합니다
    var infowindow = new kakao.maps.InfoWindow({
        content: catchformDatas[i][1] // 인포윈도우에 표시할 내용
    });

    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
    // 이벤트 리스너로는 클로저를 만들어 등록합니다
    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));

    catchformMarkers.push(marker)
  }

}

function createEtcfromMarker(){
  for(var i=0; i<etcDatas.length;i++){

    var imageSrc = '../images/spobee.png';
    var imageSize = new kakao.maps.Size(34,34);
    var imageOption = {offset: new kakao.maps.Point(17,34)}

    var markerImage = new kakao.maps.MarkerImage(imageSrc,imageSize,imageOption)
    // 마커를 생성
    var marker = new kakao.maps.Marker({
        position: etcDatas[i][0],
        image : markerImage
    });

    // 마커에 표시할 인포윈도우를 생성합니다
    var infowindow = new kakao.maps.InfoWindow({
        content: etcDatas[i][1] // 인포윈도우에 표시할 내용
    });

    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
    // 이벤트 리스너로는 클로저를 만들어 등록합니다
    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));

    etcMarkers.push(marker)
  }
}

function createEmptyfromMarker(){
  for(var i=0; i<emptyDatas.length;i++){

    // 마커를 생성
    var marker = new kakao.maps.Marker({
        position: emptyDatas[i][0]
    });

    // 마커에 표시할 인포윈도우를 생성합니다
    var infowindow = new kakao.maps.InfoWindow({
        content: emptyDatas[i][1] // 인포윈도우에 표시할 내용
    });

    // 마커에 mouseover 이벤트와 mouseout 이벤트를 등록합니다
    // 이벤트 리스너로는 클로저를 만들어 등록합니다
    // for문에서 클로저를 만들어 주지 않으면 마지막 마커에만 이벤트가 등록됩니다
    kakao.maps.event.addListener(marker, 'mouseover', makeOverListener(map, marker, infowindow));
    kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));

    emptyMarkers.push(marker)
  }
}

//게임원을 표시
function setGameoneMarkers(map) {
  for (var i = 0; i < gameoneMarkers.length; i++) {
      gameoneMarkers[i].setMap(map);
  }
}

//캐치폼을 표시
function setCatchfromMarkers(map) {
  for (var i = 0; i < catchformMarkers.length; i++) {
      catchformMarkers[i].setMap(map);
  }
}

//기타를 표시
function setEtcMarkers(map) {
  for (var i = 0; i < etcMarkers.length; i++) {
      etcMarkers[i].setMap(map);
  }
}

//없는 걸 표시
function setEmptyMarkers(map) {
  for (var i = 0; i < emptyMarkers.length; i++) {
      emptyMarkers[i].setMap(map);
  }
}

createGameoneMarker();
setGameoneMarkers(map);

createCatchfromMarker();
setCatchfromMarkers(map);

createEmptyfromMarker();
setEmptyMarkers(map);

createEtcfromMarker();
setEtcMarkers(map);

// 인포윈도우를 표시하는 클로저를 만드는 함수입니다
function makeOverListener(map, marker, infowindow) {
    return function() {
        infowindow.open(map, marker);
    };
}

// 인포윈도우를 닫는 클로저를 만드는 함수입니다
function makeOutListener(infowindow) {
    return function() {
        infowindow.close();
    };
}


//addMarker(new kakao.maps.LatLng(33.450701, 126.570667));
// 지도타입 컨트롤의 지도 또는 스카이뷰 버튼을 클릭하면 호출되어 지도타입을 바꾸는 함수입니다
function setMapType(maptype) {
    var roadmapControl = document.getElementById('btnRoadmap');
    var skyviewControl = document.getElementById('btnSkyview');
    if (maptype === 'roadmap') {
        map.setMapTypeId(kakao.maps.MapTypeId.ROADMAP);
        roadmapControl.className = 'selected_btn';
        skyviewControl.className = 'btn';
    } else {
        map.setMapTypeId(kakao.maps.MapTypeId.HYBRID);
        skyviewControl.className = 'selected_btn';
        roadmapControl.className = 'btn';
    }

}

// 지도 확대, 축소 컨트롤에서 확대 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
function zoomIn() {
    map.setLevel(map.getLevel() - 1);
}

// 지도 확대, 축소 컨트롤에서 축소 버튼을 누르면 호출되어 지도를 확대하는 함수입니다
function zoomOut() {
    map.setLevel(map.getLevel() + 1);
}

// 카테고리를 클릭했을 때 type에 따라 카테고리의 스타일과 지도에 표시되는 마커를 변경합니다
function changeMarker(type){

  // 커피숍 카테고리가 클릭됐을 때
  if (type === 'total') {

    setGameoneMarkers(map);
    setCatchfromMarkers(map);
    setEmptyMarkers(map);
    setEtcMarkers(map);

  }
  else if (type === 'gameone') {

    setGameoneMarkers(map);
    setCatchfromMarkers(null);
    setEmptyMarkers(null);
    setEtcMarkers(null);

  }

  else if (type === 'catchform') {

    setGameoneMarkers(null);
    setCatchfromMarkers(map);
    setEmptyMarkers(null);
    setEtcMarkers(null);

  }
  else if (type === 'etc') {

    setGameoneMarkers(null);
    setCatchfromMarkers(null);
    setEmptyMarkers(null);
    setEtcMarkers(map);

  }
  else if (type === 'empty') {

    setGameoneMarkers(null);
    setCatchfromMarkers(null);
    setEmptyMarkers(map);
    setEtcMarkers(null);
 }



}

</script>

</body>
</html>
